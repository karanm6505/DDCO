$date
	Tue Aug 20 15:51:20 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ripplecarryadder_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " c3 $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module rca $end
$var wire 1 & a0 $end
$var wire 1 ' a1 $end
$var wire 1 ( a2 $end
$var wire 1 ) a3 $end
$var wire 1 * b0 $end
$var wire 1 + b1 $end
$var wire 1 , b2 $end
$var wire 1 - b3 $end
$var wire 1 % cin $end
$var wire 1 . s3 $end
$var wire 1 / s2 $end
$var wire 1 0 s1 $end
$var wire 1 1 s0 $end
$var wire 1 " c3 $end
$var wire 1 2 c2 $end
$var wire 1 3 c1 $end
$var wire 1 4 c0 $end
$scope module fa1 $end
$var wire 1 & a $end
$var wire 1 * b $end
$var wire 1 % c $end
$var wire 1 5 t5 $end
$var wire 1 6 t4 $end
$var wire 1 7 t3 $end
$var wire 1 8 t2 $end
$var wire 1 9 t1 $end
$var wire 1 1 s $end
$var wire 1 4 c_out $end
$scope module a1 $end
$var wire 1 & a $end
$var wire 1 * b $end
$var wire 1 8 o $end
$upscope $end
$scope module a2 $end
$var wire 1 & a $end
$var wire 1 % b $end
$var wire 1 7 o $end
$upscope $end
$scope module a3 $end
$var wire 1 * a $end
$var wire 1 % b $end
$var wire 1 6 o $end
$upscope $end
$scope module o1 $end
$var wire 1 8 a $end
$var wire 1 7 b $end
$var wire 1 5 o $end
$upscope $end
$scope module o2 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 4 o $end
$upscope $end
$scope module x1 $end
$var wire 1 & a $end
$var wire 1 * b $end
$var wire 1 9 o $end
$upscope $end
$scope module x2 $end
$var wire 1 % a $end
$var wire 1 9 b $end
$var wire 1 1 o $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 ' a $end
$var wire 1 + b $end
$var wire 1 4 c $end
$var wire 1 : t5 $end
$var wire 1 ; t4 $end
$var wire 1 < t3 $end
$var wire 1 = t2 $end
$var wire 1 > t1 $end
$var wire 1 0 s $end
$var wire 1 3 c_out $end
$scope module a1 $end
$var wire 1 ' a $end
$var wire 1 + b $end
$var wire 1 = o $end
$upscope $end
$scope module a2 $end
$var wire 1 ' a $end
$var wire 1 4 b $end
$var wire 1 < o $end
$upscope $end
$scope module a3 $end
$var wire 1 + a $end
$var wire 1 4 b $end
$var wire 1 ; o $end
$upscope $end
$scope module o1 $end
$var wire 1 = a $end
$var wire 1 < b $end
$var wire 1 : o $end
$upscope $end
$scope module o2 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 3 o $end
$upscope $end
$scope module x1 $end
$var wire 1 ' a $end
$var wire 1 + b $end
$var wire 1 > o $end
$upscope $end
$scope module x2 $end
$var wire 1 4 a $end
$var wire 1 > b $end
$var wire 1 0 o $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 ( a $end
$var wire 1 , b $end
$var wire 1 3 c $end
$var wire 1 ? t5 $end
$var wire 1 @ t4 $end
$var wire 1 A t3 $end
$var wire 1 B t2 $end
$var wire 1 C t1 $end
$var wire 1 / s $end
$var wire 1 2 c_out $end
$scope module a1 $end
$var wire 1 ( a $end
$var wire 1 , b $end
$var wire 1 B o $end
$upscope $end
$scope module a2 $end
$var wire 1 ( a $end
$var wire 1 3 b $end
$var wire 1 A o $end
$upscope $end
$scope module a3 $end
$var wire 1 , a $end
$var wire 1 3 b $end
$var wire 1 @ o $end
$upscope $end
$scope module o1 $end
$var wire 1 B a $end
$var wire 1 A b $end
$var wire 1 ? o $end
$upscope $end
$scope module o2 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 2 o $end
$upscope $end
$scope module x1 $end
$var wire 1 ( a $end
$var wire 1 , b $end
$var wire 1 C o $end
$upscope $end
$scope module x2 $end
$var wire 1 3 a $end
$var wire 1 C b $end
$var wire 1 / o $end
$upscope $end
$upscope $end
$scope module fa4 $end
$var wire 1 ) a $end
$var wire 1 - b $end
$var wire 1 2 c $end
$var wire 1 D t5 $end
$var wire 1 E t4 $end
$var wire 1 F t3 $end
$var wire 1 G t2 $end
$var wire 1 H t1 $end
$var wire 1 . s $end
$var wire 1 " c_out $end
$scope module a1 $end
$var wire 1 ) a $end
$var wire 1 - b $end
$var wire 1 G o $end
$upscope $end
$scope module a2 $end
$var wire 1 ) a $end
$var wire 1 2 b $end
$var wire 1 F o $end
$upscope $end
$scope module a3 $end
$var wire 1 - a $end
$var wire 1 2 b $end
$var wire 1 E o $end
$upscope $end
$scope module o1 $end
$var wire 1 G a $end
$var wire 1 F b $end
$var wire 1 D o $end
$upscope $end
$scope module o2 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 " o $end
$upscope $end
$scope module x1 $end
$var wire 1 ) a $end
$var wire 1 - b $end
$var wire 1 H o $end
$upscope $end
$scope module x2 $end
$var wire 1 2 a $end
$var wire 1 H b $end
$var wire 1 . o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
b0 $
b0 #
0"
b0 !
$end
#10
11
1/
10
b1111 !
1.
19
1C
1>
1H
1*
1,
1'
1)
b101 $
b1010 #
#20
1A
1@
1<
1;
1F
1E
13
1"
14
12
1:
10
1D
1.
15
01
1?
b1110 !
1/
1=
0>
1G
0H
18
09
1B
0C
1+
1-
1&
1(
b1111 $
b1111 #
#30
0F
0E
0.
02
0?
0A
03
0;
04
1/
05
0:
10
0B
0@
1C
08
0=
0<
1>
b111 !
11
0*
0,
0&
0'
1%
b1010 $
b1100 #
#40
